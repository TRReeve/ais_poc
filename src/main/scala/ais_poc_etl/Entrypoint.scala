/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package ais_poc_etl

import ais_poc_etl.analytics.AnalyticsFanout
import ais_poc_etl.mock_stream.MockStream
import ais_poc_etl.validate.AISValidation
import akka.actor.ActorSystem
import akka.stream.Attributes
import akka.stream.alpakka.slick.scaladsl.SlickSession
import akka.stream.scaladsl.Sink

import scala.concurrent.duration.DurationInt


object Entrypoint extends App {

  implicit val system: ActorSystem = ActorSystem("ais_poc")

  implicit val session: SlickSession = SlickSession.forConfig("slick-postgres")


  val max_batch_size = 20000
  val max_batch_duration = 1.seconds
  val data_stream = MockStream.apply.source
  val validate_ais = AISValidation.apply
  val analytics_fanout = new AnalyticsFanout

  // Run data stream validate data and split to analytics flows
  data_stream
    .via(validate_ais.validate_messages) // Map Strings to AIS Message Objects
    // Batch Data Stream for analytics processes
    .groupedWithin(max_batch_size, max_batch_duration)
    .log("Validation", x => f"${x.size} records validated")
    .withAttributes(Attributes.logLevels(
      Attributes.logLevelInfo))
    .via(analytics_fanout.analytics_fanout)
    .to(Sink.ignore)
    .run()

}